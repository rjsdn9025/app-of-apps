apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.deployment.name }}
spec:
{{- if not .Values.hpa.enabled }}
  replicas: {{ .Values.hpa.minReplicas }}
{{- end }}
  revisionHistoryLimit: {{ .Values.deployment.revisionHistoryLimit }}
  selector:
    matchLabels:
      app: {{ .Values.app.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.app.name }}
    spec:
      containers:
      - name: nginx
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: Always
        resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 200m
              memory: 256Mi
        # livenessProbe:
        #   tcpSocket:
        #     port: 80
        #   initialDelaySeconds: 4
        #   periodSeconds: 10
        #   failureThreshold: 3
        #   timeoutSeconds: 3
        # readinessProbe:
        #   tcpSocket:
        #     port: 80
        #   initialDelaySeconds: 4
        #   periodSeconds: 10
        #   failureThreshold: 6
        #   timeoutSeconds: 3
        # startupProbe:
        #   tcpSocket:
        #     port: 80
        #   initialDelaySeconds: 2
        #   periodSeconds: 3
        #   failureThreshold: 10
        #   timeoutSeconds: 1
        ports:
        - containerPort: 80
        env:
        - name: REACT_APP_BACKEND_URL
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secretName }}
              key: backend_url
        - name: REACT_APP_PORT
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secretName }}
              key: port
        - name: REACT_APP_COGNITO_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secretName }}
              key: cognito_client_id
        - name: REACT_APP_COGNITO_USER_POOL_ID
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secretName }}
              key: cognito_user_pool_id
